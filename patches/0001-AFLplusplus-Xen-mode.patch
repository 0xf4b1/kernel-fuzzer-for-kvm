diff --git a/include/config.h b/include/config.h
index 973bbcbb..1bc02f1b 100644
--- a/include/config.h
+++ b/include/config.h
@@ -103,6 +103,10 @@
 
 #define MEM_LIMIT_UNICORN 0U
 
+/* Default memory limit when running in Xen mode (MB): */
+
+#define MEM_LIMIT_XEN 750
+
 /* Number of calibration cycles per every new test case (and for test
    cases that show variable behavior): */
 
diff --git a/include/forkserver.h b/include/forkserver.h
index 3019e289..e71e77d8 100644
--- a/include/forkserver.h
+++ b/include/forkserver.h
@@ -77,6 +77,8 @@ typedef struct afl_forkserver {
 
   bool qemu_mode;                       /* if running in qemu mode or not   */
 
+  bool xen_mode;                        /* if running in qemu mode or not   */
+
   bool use_stdin;                       /* use stdin for sending data       */
 
   bool no_unlink;                       /* do not unlink cur_input          */
diff --git a/src/afl-forkserver.c b/src/afl-forkserver.c
index 39f044f2..55be7721 100644
--- a/src/afl-forkserver.c
+++ b/src/afl-forkserver.c
@@ -84,7 +84,7 @@ void afl_fsrv_init(afl_forkserver_t *fsrv) {
   fsrv->init_tmout = EXEC_TIMEOUT * FORK_WAIT_MULT;
   fsrv->mem_limit = MEM_LIMIT;
   fsrv->out_file = NULL;
-  fsrv->kill_signal = SIGKILL;
+  fsrv->kill_signal = fsrv->xen_mode ? SIGTERM : SIGKILL;
 
   /* exec related stuff */
   fsrv->child_pid = -1;
diff --git a/src/afl-fuzz.c b/src/afl-fuzz.c
index 7facf261..0937c412 100644
--- a/src/afl-fuzz.c
+++ b/src/afl-fuzz.c
@@ -113,7 +113,8 @@ static void usage(u8 *argv0, int more_help) {
       "  -Q            - use binary-only instrumentation (QEMU mode)\n"
       "  -U            - use unicorn-based instrumentation (Unicorn mode)\n"
       "  -W            - use qemu-based instrumentation with Wine (Wine "
-      "mode)\n\n"
+      "mode)\n"
+      "  -X            - use virtual-machine instrumentation (Xen mode)\n\n"
 
       "Mutator settings:\n"
       "  -D            - enable deterministic fuzzing (once per queue entry)\n"
@@ -357,7 +358,7 @@ int main(int argc, char **argv_orig, char **envp) {
 
   while ((opt = getopt(
               argc, argv,
-              "+b:c:i:I:o:f:F:m:t:T:dDnCB:S:M:x:QNUWe:p:s:V:E:L:hRP:Z")) > 0) {
+              "+b:c:i:I:o:f:F:m:t:T:dDnCB:S:M:x:QNUWe:p:s:V:E:L:hRP:Z:X")) > 0) {
 
     switch (opt) {
 
@@ -754,6 +755,15 @@ int main(int argc, char **argv_orig, char **envp) {
 
         break;
 
+      case 'X':                                                /* Xen mode */
+
+        if (afl->fsrv.xen_mode) { FATAL("Multiple -X options not supported"); }
+        afl->fsrv.xen_mode = 1;
+
+        if (!mem_limit_given) { afl->fsrv.mem_limit = MEM_LIMIT_XEN; }
+
+        break;
+
       case 'W':                                           /* Wine+QEMU mode */
 
         if (afl->use_wine) { FATAL("Multiple -W options not supported"); }
